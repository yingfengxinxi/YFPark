<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sdqingyun.smartpark.module.bus.dal.mysql.owner.OwnerMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        智慧园区
     -->

    <select id="getCountOwnerAnnularRing" resultType="Map" parameterType="cn.sdqingyun.smartpark.module.bus.controller.admin.owner.vo.OwnerSaveReqVO">
        SELECT
            ta.`name` as "name",
            count(ow.id) as "value"
        FROM
            OWNER ow
            LEFT JOIN tag_industry ta ON ow.industry_id = ta.id
        WHERE
            ow.industry_id IS NOT NULL
        <if test="villageId != null and villageId != ''">
            AND FIND_IN_SET(#{villageId}, ow.village_id_list) > 0
        </if>
        <if test="buildBind != null and buildBind != ''">
            AND JSON_CONTAINS(ow.build_bind, JSON_OBJECT('buildId', #{buildBind}), '$')
        </if>
        GROUP BY
            ow.industry_id
    </select>

    <select id="getCountOwnerTagAnnularRing" resultType="Map" parameterType="cn.sdqingyun.smartpark.module.bus.controller.admin.owner.vo.OwnerSaveReqVO">
        SELECT
        ta.name "name",
        COUNT(ow.id) AS "value"
        FROM
        owner ow
        JOIN tag_owner ta ON FIND_IN_SET(ta.id, REPLACE(REPLACE(REPLACE(ow.tag_info, '[', ''), ']', ''), ' ', ''))
        WHERE
        ow.tag_info IS NOT NULL
        <if test="villageId != null and villageId != ''">
            AND FIND_IN_SET(#{villageId}, ow.village_id_list) > 0
        </if>
        <if test="buildBind != null and buildBind != ''">
            AND JSON_CONTAINS(ow.build_bind, JSON_OBJECT('buildId', #{buildBind}), '$')
        </if>
        GROUP BY
        ta.name
    </select>

    <select id="getByIdOwnerInfo" resultType="cn.sdqingyun.smartpark.module.bus.controller.admin.owner.vo.OwnerInfoVO">
        SELECT a.id                                                    as "id",
               a.`name`                                                AS "ownerName",
               b.`name`                                                AS "contactName",
               CONCAT(c.contract_start_time, "~", c.contract_end_time) as "contractValidityPeriod",
               c.id                                                    as "contractId",
               c.`status`                                              AS "status",
               d.nickname                                              AS "operatorName",
               c.room_number                                           as "roomNumber",
               a.is_personal                                           as "isPersonal"
        FROM `owner` a
                 LEFT JOIN owner_contacts b ON a.contact_id = b.id
                 LEFT JOIN contract c ON c.owner_id = a.id
                 LEFT JOIN system_users d ON d.id = c.operator_id
        WHERE a.deleted = '0'
          AND a.id = #{id}
        ORDER BY c.create_time DESC LIMIT 1
    </select>
</mapper>